<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="OtherMapper">

	<select id="studyPayList" resultType="OtReserve">
		SELECT RDATE, COUNT(RTIME) "RTIME"
		FROM RESERVE
		WHERE MEMBERID= #{memberId} AND RTYN='Y' AND RCODE='S'
		GROUP BY RDATE
		ORDER BY RDATE DESC
	</select>

	<!-- 스터디 정기권 남은 갯수 -->
	<select id="studyTicket" resultType="OtTicket">
		SELECT SUM(TPRICENO)-SUM(TUSENO) "TYN"
		FROM TICKET
		WHERE TCODE='S' AND TYN='Y'
		AND MEMBERID= #{memberId}
	</select>

	<!-- studyPay select검색 -->
	<select id="studySelect" parameterType="map" resultType="OtReserve">
		SELECT RDATE, COUNT(RTIME) "RTIME"
		FROM RESERVE
		WHERE MEMBERID= #{memberId} AND RTYN='Y' AND RCODE='S'
		AND SUBSTR(RDATE,1,2) LIKE SUBSTR(#{year},3,2) AND SUBSTR(RDATE,4,2) LIKE #{month}
		GROUP BY RDATE
		ORDER BY RDATE DESC
	</select>
	
	<!-- 스터디 정기권 구매 조회 -->
	<select id="studyTicketList" resultType="OtTicket">
		SELECT TNO, TDATE, TPRICENO, TPRICENO*400 "TUSENO", TPRICENO-TUSENO "TCODE"
		FROM TICKET
		WHERE TCODE='S' AND MEMBERID= #{memberId}
		ORDER BY TNO DESC
	</select>
	
	<!-- 스터디 페이징 -->
	<select id="getListCount" resultType="int">
		SELECT COUNT(*)
		FROM TICKET
		WHERE TCODE='S' AND MEMBERID= #{memberId}
	</select>
	
	<!-- 헬스룸 리스트 -->
	<select id="healthPayList" resultType="OtReserve">
		SELECT RDATE, COUNT(RTIME) "RTIME"
		FROM RESERVE
		WHERE MEMBERID= #{memberId} AND RTYN='Y' AND RCODE='H'
		GROUP BY RDATE
		ORDER BY RDATE DESC
	</select>
	
	<!-- 헬스 정기권 남은 갯수 -->
	<select id="healthTicket" resultType="OtTicket">
		SELECT SUM(TPRICENO)-SUM(TUSENO) "TYN"
		FROM TICKET
		WHERE TCODE='H' AND TYN='Y'
		AND MEMBERID= #{memberId}
	</select>	
	
	<!-- 헬스 select검색 -->
	<select id="healthSelect" parameterType="map" resultType="OtReserve">
		SELECT RDATE, COUNT(RTIME) "RTIME"
		FROM RESERVE
		WHERE MEMBERID= #{memberId} AND RTYN='Y' AND RCODE='H'
		AND SUBSTR(RDATE,1,2) LIKE SUBSTR(#{year},3,2) AND SUBSTR(RDATE,4,2) LIKE #{month}
		GROUP BY RDATE
		ORDER BY RDATE DESC
	</select>
	
	<!-- 헬스 정기권 구매 조회 -->
	<select id="healthTicketList" resultType="OtTicket">
		SELECT TNO, TDATE, TPRICENO, TPRICENO*400 "TUSENO", TPRICENO-TUSENO "TCODE"
		FROM TICKET
		WHERE TCODE='H' AND MEMBERID= #{memberId}
		ORDER BY TNO DESC
	</select>
	
	<!-- 헬스 페이징 -->
	<select id="getListCountHealth" resultType="int">
		SELECT COUNT(*)
		FROM TICKET
		WHERE TCODE='H' AND MEMBERID= #{memberId}
	</select>	
	
	<!-- 스터디 정기권 구매-->
	<insert id="insertStudyTicket">
		INSERT INTO TICKET
		VALUES(TICKET_SEQ.NEXTVAL, SYSDATE, #{tPriceNo}, DEFAULT, 'S', DEFAULT, #{memberId})
	</insert>
	
	<!-- 헬스 정기권 구매 -->
	<insert id="insertHealthTicket">
		INSERT INTO TICKET
		VALUES(TICKET_SEQ.NEXTVAL, SYSDATE, #{tPriceNo}, DEFAULT, 'H', DEFAULT, #{memberId})
	</insert>	
	
	<!-- 자동결제 해지 -->
	<update id="autoPayStop">
		UPDATE MONTHPAY SET MPTYN='N' WHERE MEMBERID=#{memberId}
	</update>
	
	<!-- 자동결제 출력 -->
	<select id="autoPayList" resultType="OtMonthPay">
		SELECT MPNO, MPDATE, TRUNC(TO_DATE(MPDATE,'YY/MM/DD'),'MM') || ' ~ ' || LAST_DAY(TO_DATE(MPDATE,'YY/MM/DD')) "MEMBERID",
		TO_CHAR(ADD_MONTHS( TRUNC(TO_DATE(MPDATE,'YY/MM/DD'),'MM'), 1 ),'YYYY-MM-DD') "NEXTPAY" , MPMEANS, MPTYN, MPPRICE, MYN
		FROM MONTHPAY
		WHERE MEMBERID=#{memberId} AND MYN='Y'
		ORDER BY MPNO DESC
	</select>
	
	<!-- 가계부 입력 -->
	<insert id="insertAccount">
		INSERT INTO ACCOUNT
		VALUES(ACCOUNT_SEQ.NEXTVAL, #{acInOut} , DEFAULT, #{acPrice}, #{acBig}, #{acSmall}, #{memberId})
	</insert>
	
	<!-- 가계부 출력  -->
	<select id="accountList" resultType="Account">
		SELECT ACNO, ACDATE, TO_CHAR( ACPRICE , '999,999,999,999,999') "ACPRICE", ACBIG, ACSMALL, ACINOUT
		FROM ACCOUNT
		WHERE MEMBERID=#{memberId}
		AND ACDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
		ORDER BY ACDATE DESC
	</select>
	
	<!-- 가계부 페이징 -->
	<select id="getListCountAccount" resultType="int">
		SELECT COUNT(*)
		FROM ACCOUNT
		WHERE MEMBERID=#{memberId}
		AND ACDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
	</select>
	
	<!-- 쉐어하우스 리스트 -->
	<select id="monthList" resultType="OtReserve">
		SELECT COUNT(RDATE)*500 "RDATE"
		FROM RESERVE
		WHERE MEMBERID=#{memberId} AND RTYN='N'
		AND RDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
		UNION ALL
		SELECT COUNT(TPRICENO)*400 
		FROM TICKET
		WHERE MEMBERID=#{memberId}
		AND TDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
		UNION ALL
		SELECT NVL(MAX(MPPRICE),0)
		FROM MONTHPAY
		WHERE MEMBERID=#{memberId}
        AND MPDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
	</select>
	
	<!-- 가계부 입출합계 -->
	<select id="accountSum" resultType="Account">
		SELECT NVL(SUM(CASE WHEN ACINOUT='in' THEN ACPRICE END),0) "ACIN",
		        NVL(SUM(CASE WHEN ACINOUT='out' THEN ACPRICE END),0) "ACOUT"
		FROM ACCOUNT
		WHERE MEMBERID=#{memberId}
		AND ACDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
	</select>
	
	<!-- 엑셀 출력 -->
	<select id="excelConvert" resultType="Account">
		SELECT ACNO, ACDATE, TO_CHAR( ACPRICE , '999,999,999,999,999') "ACPRICE", ACBIG, ACSMALL, ACINOUT
		FROM ACCOUNT
		WHERE MEMBERID=#{memberId}
		AND ACDATE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(SYSDATE)
		ORDER BY ACDATE DESC
	</select>
	
	<!-- 차트 -->
	<select id="chart" resultType="Account">
		SELECT NVL(ACPRICE, 0) "ACPRICE" FROM (
		SELECT SUM(MAX(ACPRICE))  "ACPRICE"
		FROM ACCOUNT
		WHERE ACDATE BETWEEN ADD_MONTHS( TRUNC(SYSDATE,'MM'), -2 )
		AND LAST_DAY(ADD_MONTHS( TRUNC(SYSDATE,'MM'), -2 ))
		AND ACINOUT='out' AND MEMBERID=#{memberId}
		GROUP BY ACNO)
		UNION ALL
		SELECT NVL(ACPRICE, 0) FROM (
		SELECT SUM(MAX(ACPRICE))  "ACPRICE"
		FROM ACCOUNT
		WHERE ACDATE BETWEEN ADD_MONTHS( TRUNC(SYSDATE,'MM'), -1 )
		AND LAST_DAY(ADD_MONTHS( TRUNC(SYSDATE,'MM'), -1 ))
		AND ACINOUT='out' AND MEMBERID=#{memberId}
		GROUP BY ACNO)
		UNION ALL
		SELECT NVL(ACPRICE, 0) FROM (
		SELECT SUM(MAX(ACPRICE)) "ACPRICE"
		FROM ACCOUNT
		WHERE ACDATE BETWEEN TRUNC(SYSDATE,'MM')
		AND LAST_DAY(SYSDATE)
		AND ACINOUT='out' AND MEMBERID=#{memberId}
		GROUP BY ACNO)
	</select>
	
	<select id="checkIdStudy" resultType="OtReserve">
		SELECT RNO, RTIME FROM RESERVE
		WHERE RDATE=SUBSTR(TO_CHAR(SYSDATE,'YYYY-MM-DD'),1,10) AND RCODE='S' 
		AND RCHECKYN='N' AND MEMBERID=#{memberId}
	</select>
	
	<update id="checkSelectStudy" parameterType="java.util.HashMap">
		UPDATE RESERVE
		SET RCHECKYN='Y' WHERE RNO IN
		<foreach collection="rNoList" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="checkIdHealth" resultType="OtReserve">
		SELECT RNO, RTIME FROM RESERVE
		WHERE RDATE=SUBSTR(TO_CHAR(SYSDATE,'YYYY-MM-DD'),1,10) AND RCODE='H'
		AND RCHECKYN='N' AND MEMBERID=#{memberId}
	</select>
	
	<update id="checkSelectHealth" parameterType="java.util.HashMap">
		UPDATE RESERVE
		SET RCHECKYN='Y' WHERE RNO IN
		<foreach collection="rNoList" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	

</mapper>
